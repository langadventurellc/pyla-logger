version: 2.1

parameters:
  deploy-project-id:
    type: string
    default: "langadventure-shared-common"

  action:
    type: enum
    enum: [cicd, force-deploy]
    default: cicd

jobs:
  deploy:
    docker:
      - image: cimg/gcp:2023.09
    parameters:
      package_name:
        type: string
        default: ${CIRCLE_PROJECT_REPONAME}
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Configure Python to use Artifact Registry
          command: |
            echo $GOOGLE_CREDENTIALS_JSON > ./gcloud-key.json
            gcloud auth activate-service-account --key-file=./gcloud-key.json
      - run:
          name: Install poetry
          command: |
            pip install poetry
      - run:
          name: Add Artifact Registry to Poetry
          command: |
            poetry source add --priority=supplemental gcp https://us-west1-python.pkg.dev/langadventure-shared-common/langadventure-python/simple
            poetry source add --priority=supplemental gcp-pub https://us-west1-python.pkg.dev/langadventure-shared-common/langadventure-python/
            poetry config http-basic.gcp oauth2accesstoken $(gcloud auth print-access-token)
            poetry config http-basic.gcp-pub oauth2accesstoken $(gcloud auth print-access-token)
      - when:
          condition:
            equal: [ force-deploy, << pipeline.parameters.action >> ]
          steps:
            - run:
                name: Update version
                command: |
                  poetry version $(poetry version -s).b$CIRCLE_BUILD_NUM
      - run:
          name: Build
          command: |
            poetry build
      - run:
          name: Publish
          command: |
            poetry publish -r gcp-pub
 
workflows:
  build-and-deploy:
    when:
      equal: [ cicd, << pipeline.parameters.action >> ]
    jobs:
      - deploy:
          context:
            - gcp
          # filters:
          #   branches:
          #     only: main

  force-deploy:
    when:
      equal: [ force-deploy, << pipeline.parameters.action >> ]
    jobs:
      - deploy:
          context:
            - gcp